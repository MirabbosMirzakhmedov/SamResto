import time
from datetime import datetime, timedelta
from typing import List, Dict

import gspread
import telebot
import threading
from oauth2client.service_account import ServiceAccountCredentials

bot: telebot.TeleBot = telebot.TeleBot(
    # token='6380339604:AAFtOjqWgPX7zMIQ2nrBzuBIXR-3lF9gBI8'  # original bot
    token='6426234952:AAFFW03vFQUvu5VYhamtGWwJuvIcfAJ72WM'  # test bot
)

scope: List = [
    'https://www.googleapis.com/auth/spreadsheets',
    'https://www.googleapis.com/auth/drive.file',
    'https://www.googleapis.com/auth/drive'
]
creds = ServiceAccountCredentials.from_json_keyfile_name(
    'sheets_credentials.json', scope
)
gc = gspread.authorize(creds)
spreadsheet = gc.open('surveyResponses')
sheet = spreadsheet.sheet1
users_sheet = spreadsheet.get_worksheet(1)
user_ids = users_sheet.col_values(1)[1:]

reviews_list = []


@bot.message_handler(commands=['start'])
def start(message):
    try:
        bot.send_message(
            message.chat.id,
            text=f'‚ò∫Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç\n<b>La Esmeralda!</b>\n\n'
                 f'–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —ç—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, '
                 f'–∏ –µ—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞, –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –∏–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è.\n\n'
                 f'üç± –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–∫–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à –≤–µ–±-—Å–∞–π—Ç, '
                 f'–∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ –Ω–æ–º–µ—Ä—É\nüìû +998 99 - 661 44 44\n\n'
                 f'‚ù§Ô∏è –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ—á—å –≤–∞–º.',
            parse_mode='HTML'
        )
    except Exception as err:
        bot.send_message(
            message.chat.id,
            text=f'–û—à–∏–±–∫–∞\n\n{err}\n\n'
                 f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞,–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ '
                 f'—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏/'
        )
        time.sleep(1)


@bot.message_handler(commands=['post'])
def send_message(message):
    if message.chat.id == 368195441:
        new_review = message.text[6:]
        bot.send_message(
            chat_id=-1001507264536,
            text=new_review
        )


def get_latest_record():
    try:
        all_records = sheet.get_all_records()
        if all_records:
            return all_records[-1]
        return None
    except Exception:
        return None


def check_for_changes():
    latest_record = None
    while True:
        try:
            time.sleep(10)
            new_record = get_latest_record()

            if new_record and new_record != latest_record:
                new_time = (datetime.strptime(
                    new_record['–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏'][11:16], '%H:%M') + timedelta(
                    hours=5)).strftime('%H:%M')
                review_format: Dict = {
                    '<b>–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏</b>': new_record['–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏'][:10],
                    '<b>–ò–º—è –≥–æ—Å—Ç—å—è</b>': new_record['–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?'],
                    '<b>–¢–µ–ª–µ—Ñ–æ–Ω –≥–æ—Å—Ç—å—è</b>': new_record['–ö–∞–∫–æ–π —É –≤–∞—Å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞?'],
                    '\n<b>–û—Ñ–∏—Ü–∏–∞–Ω—Ç</b>': new_record['–ö—Ç–æ –≤–∞—Å –æ–±—Å–ª—É–∂–∏–≤–∞–ª?'],
                    '‚îÄ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ': f"<b>{new_record['–ö–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ']} {'‚úÖ' if new_record['–ö–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ'] else '(–ù–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ü–µ–Ω–∫—É)'}</b>",
                    '‚îÄ –û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ': f"<b>{new_record['–ö–∞—á–µ—Å—Ç–≤–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–ª—é–¥']} {'‚úÖ' if new_record['–ö–∞—á–µ—Å—Ç–≤–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–ª—é–¥'] else '(–ù–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ü–µ–Ω–∫—É)'}</b>",
                    '‚îÄ –ë–∞—Ä–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏': f"<b>{new_record['–ö–∞—á–µ—Å—Ç–≤–æ –±–∞—Ä–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤']} {'‚úÖ' if new_record['–ö–∞—á–µ—Å—Ç–≤–æ –±–∞—Ä–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤'] else '(–ù–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ü–µ–Ω–∫—É)'}</b>",
                    '‚îÄ –î–µ—Å–µ—Ä—Ç—ã': f"<b>{new_record['–ö–∞—á–µ—Å—Ç–≤–æ –¥–µ—Å–µ—Ä—Ç–æ–≤']} {'‚úÖ' if new_record['–ö–∞—á–µ—Å—Ç–≤–æ –¥–µ—Å–µ—Ä—Ç–æ–≤'] else '(–ù–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ü–µ–Ω–∫—É)'}</b>",
                    '‚îÄ –ò–Ω—Ç–µ—Ä—å–µ—Ä': f"<b>{new_record['–ö–∞—á–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞']} {'‚úÖ' if new_record['–ö–∞—á–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞'] else '(–ù–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ü–µ–Ω–∫—É)'}</b>",
                    '\n<b>–ö–∞–∫ –≤—ã –æ –Ω–∞—Å —É–∑–Ω–∞–ª–∏?</b>': new_record['–ö–∞–∫ –≤—ã –æ –Ω–∞—Å —É–∑–Ω–∞–ª–∏?'],
                    '<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</b>': new_record['–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏'],
                }

                formatted_review = '\n'.join(
                    [f'{key}: {value}' for key, value in review_format.items()]
                )

                bot.send_message(
                    -1001507264536, # RESTAURANT ID
                    text=f'<b>--- –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –≤ {new_time}---</b>\n\n'
                         f'{formatted_review}',
                    parse_mode='HTML'
                )

                latest_record = new_record
        except Exception as e:
            bot.send_message(
                368195441,
                f"Error in check_for_changes: {e}"
            )
            time.sleep(1)


def polling_thread():
    while True:
        try:
            print('Bot started')
            bot.infinity_polling(
                timeout=20,
                skip_pending=False,
                long_polling_timeout=20,
                logger_level=40,
                allowed_updates=['message', 'edited_channel_post',
                                 'callback_query'],
                restart_on_change=False,
                path_to_watch=None
            )
        except Exception as e:
            bot.send_message(
                368195441,
                f"Error in check_for_changes: {e}"
            )
            time.sleep(5)


check_thread = threading.Thread(target=check_for_changes)
polling_thread = threading.Thread(target=polling_thread)

check_thread.start()
polling_thread.start()

check_thread.join()
polling_thread.join()
